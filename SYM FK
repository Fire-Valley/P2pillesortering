import sympy as sp
theta1, theta2, theta3, theta4, theta5, theta6 = sp.symbols('theta1 theta2 theta3 theta4 theta5 theta6')
# Længder på de forskellige dele af robotten
L = {
    'world': {'l': 90},
    'hop': {'l': 45},
    'base': {'l': 45},
    'lower_arm': {'l': 95},
    'parallel_arm': {'l': 120, 's1': 30, 's2': 20},
    'elbow': {'l': 18},
    'upper_arm': {'l': 157},
    'wrist': {'l': 75}
}
# Dette er vores DH parameter taget fra vores Forward kinematik
dh_params = [
    {'theta': 0, 'd': L['world']['l'], 'a': 0, 'alpha': 0},
    {'theta': theta1, 'd': L['hop']['l'], 'a': L['base']['l'], 'alpha': 0},
    {'theta': theta2, 'd': 0, 'a': L['lower_arm']['l'], 'alpha': -sp.pi/2},
    {'theta': theta3, 'd': L['upper_arm']['l'] , 'a': 0, 'alpha': 0},
    {'theta': theta4, 'd': 0, 'a': L['elbow']['l'], 'alpha': sp.pi/2},
    {'theta': theta5, 'd': 0, 'a': 0, 'alpha':  sp.pi/2},
    {'theta': theta6, 'd': 0, 'a': 0, 'alpha': -sp.pi/2},
    {'theta': 0, 'd': L['wrist']['l'], 'a': 0, 'alpha': 0}
]


def transformation_matrix(d, a, alpha_deg, theta):
    alpha = sp.rad(alpha_deg) if isinstance(alpha_deg, (int, float)) else alpha_deg
    return sp.Matrix([
        [sp.cos(theta), -sp.sin(theta), 0, a],
        [sp.sin(theta) * sp.cos(alpha), sp.cos(theta) * sp.cos(alpha), -sp.sin(alpha), sp.sin(alpha) * d],
        [sp.sin(theta) * sp.sin(alpha), sp.cos(theta) * sp.sin(alpha), sp.cos(alpha), sp.cos(alpha) * d],
        [0, 0, 0, 1]
    ])

TB0 = transformation_matrix(0, L['world']['l'], 0, 0)
T01 = transformation_matrix(L['world']['l'] + L['hop']['l'], L['base']['l'], 0, theta1)
T12 = transformation_matrix(L['lower_arm']['l'], 0, 90, theta2)
T23 = transformation_matrix(L['upper_arm']['l'], 0, 0, theta3)
T34 = transformation_matrix(0, L['elbow']['l'], 90, theta4)
T45 = transformation_matrix(0, 0, -90, theta5)
T56 = transformation_matrix(0, 0, 90, theta6)
T6W = transformation_matrix(L['wrist']['l'], 0, 0, 0)

#T06 = T01 * T12 * T23 * T34 * T45 * T56
#TBW = TB0 * T06 * T6W
T36W = T01 * T12 * T23
#T03_inv = T03.inv()
#T36W = T03.inv() * TBW
#T36W = T34 @ T45 @ T56
#if T03.det() != 0:
    #T03_inv = T03.inv()
#else:
   # print("A har ingen invers")

sp.pprint(sp.simplify(T36W[:3, :3]), num_columns = 250, wrap_line = False)
